{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e2e93792",
   "metadata": {},
   "source": [
    "Texto pra teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fe510083",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Alexandre\n"
     ]
    }
   ],
   "source": [
    "print(\"Alexandre\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "2a711713",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['\\t',\n",
       " '\\n',\n",
       " '\\r',\n",
       " ' ',\n",
       " '!',\n",
       " '\"',\n",
       " '#',\n",
       " '$',\n",
       " '%',\n",
       " '&',\n",
       " \"'\",\n",
       " '(',\n",
       " ')',\n",
       " '*',\n",
       " '+',\n",
       " ',',\n",
       " '-',\n",
       " '.',\n",
       " '/',\n",
       " '0',\n",
       " '1',\n",
       " '2',\n",
       " '3',\n",
       " '4',\n",
       " '5',\n",
       " '6',\n",
       " '7',\n",
       " '8',\n",
       " '9',\n",
       " ':',\n",
       " ';',\n",
       " '<',\n",
       " '=',\n",
       " '>',\n",
       " '?',\n",
       " '@',\n",
       " '[',\n",
       " '\\\\',\n",
       " ']',\n",
       " '^',\n",
       " '_',\n",
       " '`',\n",
       " 'a',\n",
       " 'b',\n",
       " 'c',\n",
       " 'd',\n",
       " 'e',\n",
       " 'f',\n",
       " 'g',\n",
       " 'h',\n",
       " 'i',\n",
       " 'j',\n",
       " 'k',\n",
       " 'l',\n",
       " 'm',\n",
       " 'n',\n",
       " 'o',\n",
       " 'p',\n",
       " 'q',\n",
       " 'r',\n",
       " 's',\n",
       " 't',\n",
       " 'u',\n",
       " 'v',\n",
       " 'w',\n",
       " 'x',\n",
       " 'y',\n",
       " 'z',\n",
       " '{',\n",
       " '|',\n",
       " '}',\n",
       " '~',\n",
       " 'accept',\n",
       " 'add',\n",
       " 'alt',\n",
       " 'altleft',\n",
       " 'altright',\n",
       " 'apps',\n",
       " 'backspace',\n",
       " 'browserback',\n",
       " 'browserfavorites',\n",
       " 'browserforward',\n",
       " 'browserhome',\n",
       " 'browserrefresh',\n",
       " 'browsersearch',\n",
       " 'browserstop',\n",
       " 'capslock',\n",
       " 'clear',\n",
       " 'convert',\n",
       " 'ctrl',\n",
       " 'ctrlleft',\n",
       " 'ctrlright',\n",
       " 'decimal',\n",
       " 'del',\n",
       " 'delete',\n",
       " 'divide',\n",
       " 'down',\n",
       " 'end',\n",
       " 'enter',\n",
       " 'esc',\n",
       " 'escape',\n",
       " 'execute',\n",
       " 'f1',\n",
       " 'f10',\n",
       " 'f11',\n",
       " 'f12',\n",
       " 'f13',\n",
       " 'f14',\n",
       " 'f15',\n",
       " 'f16',\n",
       " 'f17',\n",
       " 'f18',\n",
       " 'f19',\n",
       " 'f2',\n",
       " 'f20',\n",
       " 'f21',\n",
       " 'f22',\n",
       " 'f23',\n",
       " 'f24',\n",
       " 'f3',\n",
       " 'f4',\n",
       " 'f5',\n",
       " 'f6',\n",
       " 'f7',\n",
       " 'f8',\n",
       " 'f9',\n",
       " 'final',\n",
       " 'fn',\n",
       " 'hanguel',\n",
       " 'hangul',\n",
       " 'hanja',\n",
       " 'help',\n",
       " 'home',\n",
       " 'insert',\n",
       " 'junja',\n",
       " 'kana',\n",
       " 'kanji',\n",
       " 'launchapp1',\n",
       " 'launchapp2',\n",
       " 'launchmail',\n",
       " 'launchmediaselect',\n",
       " 'left',\n",
       " 'modechange',\n",
       " 'multiply',\n",
       " 'nexttrack',\n",
       " 'nonconvert',\n",
       " 'num0',\n",
       " 'num1',\n",
       " 'num2',\n",
       " 'num3',\n",
       " 'num4',\n",
       " 'num5',\n",
       " 'num6',\n",
       " 'num7',\n",
       " 'num8',\n",
       " 'num9',\n",
       " 'numlock',\n",
       " 'pagedown',\n",
       " 'pageup',\n",
       " 'pause',\n",
       " 'pgdn',\n",
       " 'pgup',\n",
       " 'playpause',\n",
       " 'prevtrack',\n",
       " 'print',\n",
       " 'printscreen',\n",
       " 'prntscrn',\n",
       " 'prtsc',\n",
       " 'prtscr',\n",
       " 'return',\n",
       " 'right',\n",
       " 'scrolllock',\n",
       " 'select',\n",
       " 'separator',\n",
       " 'shift',\n",
       " 'shiftleft',\n",
       " 'shiftright',\n",
       " 'sleep',\n",
       " 'space',\n",
       " 'stop',\n",
       " 'subtract',\n",
       " 'tab',\n",
       " 'up',\n",
       " 'volumedown',\n",
       " 'volumemute',\n",
       " 'volumeup',\n",
       " 'win',\n",
       " 'winleft',\n",
       " 'winright',\n",
       " 'yen',\n",
       " 'command',\n",
       " 'option',\n",
       " 'optionleft',\n",
       " 'optionright']"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pyautogui \n",
    "import time\n",
    "#SABER TECLAS DO TECLADO\n",
    "pyautogui.KEYBOARD_KEYS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "42159b12",
   "metadata": {},
   "outputs": [],
   "source": [
    "#teste pai é brabo\n",
    "\n",
    "import pyautogui \n",
    "import time\n",
    "\n",
    "pyautogui.alert(\"O pai é Brabo\")\n",
    "pyautogui.PAUSE = 0.5\n",
    "pyautogui.press('winleft')\n",
    "pyautogui.write('intenet explorer')\n",
    "pyautogui.press('enter')\n",
    "time.sleep(3)\n",
    "pyautogui.moveTo(556, 39)\n",
    "pyautogui.click()\n",
    "pyautogui.write('172.18.53.35')\n",
    "pyautogui.press('enter')\n",
    "pyautogui.write('adm')\n",
    "pyautogui.press('tab')\n",
    "pyautogui.write('@Hmmdolcti2021')\n",
    "pyautogui.press('enter')\n",
    "pyautogui.moveTo(1432, 226)\n",
    "pyautogui.click(button='right')\n",
    "pyautogui.moveTo(1372, 525)\n",
    "pyautogui.click()\n",
    "time.sleep(1)\n",
    "pyautogui.moveTo(379, 727)\n",
    "pyautogui.click(clicks=2)\n",
    "pyautogui.write('text-align: center; color: red;')\n",
    "pyautogui.press('enter')\n",
    "pyautogui.moveTo(566, 731)\n",
    "pyautogui.click(clicks=2)\n",
    "pyautogui.write('===================----------------O pai E Brabo NINGUEM SEGURA HAHAHAHA======================---------------')\n",
    "pyautogui.press('enter')\n",
    "pyautogui.press('f12')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "0bec1e79",
   "metadata": {},
   "outputs": [],
   "source": [
    "#login materno\n",
    "\n",
    "import pyautogui\n",
    "import time\n",
    "\n",
    "navegador = 'microsoft edge'\n",
    "\n",
    "materno = '172.18.53.35'\n",
    "\n",
    "usuarioL = 'adm'\n",
    "senhaL = '@Hmmdolcti2021'\n",
    "\n",
    "nomePessoa = 'Rodrigão'\n",
    "matricula = '2224171'\n",
    "senha = '2224171'\n",
    "\n",
    "pyautogui.alert(\"Criação de Cadastro Materno\") #pai é brabo\n",
    "pyautogui.PAUSE = 0.5 #tempo de espera entre uma linha e outra\n",
    "\n",
    "#abrir navegador\n",
    "pyautogui.press('winleft') #clica na tecla windowns\n",
    "pyautogui.press('altleft')\n",
    "pyautogui.write(navegador) #escreve o nome do navagador \"micfosoft edge\"\n",
    "pyautogui.press('enter') # aperta entrer para abrir\n",
    "\n",
    "#maximizar janela\n",
    "time.sleep(2)\n",
    "pyautogui.hotkey('altleft', 'space')\n",
    "time.sleep(0.5)\n",
    "pyautogui.press('x')\n",
    "\n",
    "\n",
    "time.sleep(2) #espera 3 segundos que é o tempo do pc abrir o software\n",
    "\n",
    "#entrar no site\n",
    "#pyautogui.moveTo(556, 39) #move para para barra de pesquisa\n",
    "#pyautogui.click() #clica barra de pesquisa\n",
    "pyautogui.write(materno) #digita o site na barra de pesquisa\n",
    "pyautogui.press('enter') #entra no site\n",
    "\n",
    "#logar no site\n",
    "time.sleep(1.5)\n",
    "pyautogui.write(usuarioL) #usuario\n",
    "pyautogui.press('tab') #passa para proximo campo\n",
    "pyautogui.write(senhaL) #senha\n",
    "pyautogui.press('enter') #entra no site\n",
    "\n",
    "#ir para pagina de cadastro\n",
    "pyautogui.moveTo(154, 93) #moveu para adm\n",
    "pyautogui.click() # clicou em adm\n",
    "pyautogui.moveTo(135, 312) # moveu em T.I\n",
    "pyautogui.moveTo(304, 349) #moveu para cadastros\n",
    "pyautogui.moveTo(492, 341) #moveu para emfermeiro\n",
    "pyautogui.moveTo(497, 400) #moveu para usuario\n",
    "pyautogui.click()\n",
    "\n",
    "#to na pagina cadastro usuario\n",
    "\n",
    "#Fazer cadastro usuario\n",
    "pyautogui.moveTo(256, 216) #moveu para nome\n",
    "pyautogui.click() # clicou em nome\n",
    "pyautogui.write(nomePessoa) # escreveu nome\n",
    "\n",
    "pyautogui.moveTo(137, 459) #moveu para usuario\n",
    "pyautogui.click() # clicou em usuario\n",
    "pyautogui.write(matricula) # escreveu usuario\n",
    "\n",
    "pyautogui.moveTo(133, 504) #moveu para senha\n",
    "pyautogui.click() #clica na senha\n",
    "pyautogui.write(senha) # escreveu senha\n",
    "\n",
    "pyautogui.moveTo(520, 450) #mover para enfermagem\n",
    "pyautogui.click() #clica em enfermagem\n",
    "\n",
    "#salvar usario\n",
    "pyautogui.moveTo(148,573) #move salvar\n",
    "#pyautogui.click() #clica salvar"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d85b0c67",
   "metadata": {},
   "outputs": [],
   "source": [
    "pyautogui.moveTo(256, 216) #moveu para nome\n",
    "pyautogui.click() # clicou em nome\n",
    "pyautogui.write('NOME_PESSOA') # escreveu nome\n",
    "\n",
    "pyautogui.moveTo(137, 459) #moveu para usuario\n",
    "pyautogui.click() # clicou em usuario\n",
    "pyautogui.write('matricula') # escreveu usuario\n",
    "\n",
    "\n",
    "pyautogui.moveTo(133, 504) #moveu para senha\n",
    "pyautogui.click() #clica na senha\n",
    "pyautogui.write('senha') # escreveu senha\n",
    "\n",
    "\n",
    "\n",
    "pyautogui.moveTo(148,573) #move salvar\n",
    "#pyautogui.click() #clica salvar\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "ed298733",
   "metadata": {},
   "outputs": [],
   "source": [
    "pyautogui.moveTo(154, 93) #moveu para adm\n",
    "pyautogui.click() # clicou em adm\n",
    "pyautogui.moveTo(135, 312) # moveu em T.I"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "27a90d98",
   "metadata": {},
   "outputs": [],
   "source": [
    "time.sleep(2)\n",
    "pyautogui.hotkey('altleft', 'space')\n",
    "time.sleep(0.5)\n",
    "pyautogui.press('x')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "32c2672e",
   "metadata": {},
   "outputs": [],
   "source": [
    "pyautogui.moveTo(520, 450) #mover para enfermagem\n",
    "pyautogui.click() #clica em enfermagem"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "ef3f75fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "pagi.moveTo(400, 249)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "63ee3645",
   "metadata": {},
   "outputs": [],
   "source": [
    "#criação usuario tasy codigo full\n",
    "\n",
    "from openpyxl import load_workbook\n",
    "import os\n",
    "\n",
    "#abre o arquivo excell\n",
    "def abrir_arq_excell(nome_caminho_arquivo):\n",
    "    nome_caminho_arquivo = \"C:\\\\Users\\\\6324102\\Documents\\Lista_Alexandre.xlsx\"\n",
    "    return load_workbook(filename = nome_caminho_arquivo)\n",
    "\n",
    "#pegar as informações dentro da planilha\n",
    "def "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "47df0457",
   "metadata": {},
   "outputs": [],
   "source": [
    "#criação usuario tasy codigo teste\n",
    "\n",
    "from openpyxl import load_workbook\n",
    "import os\n",
    "from unidecode import unidecode\n",
    "import pyautogui as pagi\n",
    "import time\n",
    "\n",
    "def cria_usuario_tasy():\n",
    "\n",
    "    nome_caminho_arquivo = \"C:\\\\Users\\\\6324102\\Documents\\Lista_Alexandre.xlsx\"\n",
    "    planilha_aberta = load_workbook(filename = nome_caminho_arquivo)\n",
    "\n",
    "    #seleciona a aba que tem as informações a serem passadas para o formulario\n",
    "    sheet_selecionada = planilha_aberta['Plan1']\n",
    "\n",
    "    for linha in range(5, len(sheet_selecionada['A']) + 1):\n",
    "\n",
    "        #pega a informação dentro da planilha\n",
    "        matricula = sheet_selecionada['A%s' % linha].value\n",
    "        nome = sheet_selecionada['B%s' % linha].value\n",
    "\n",
    "        #escreve a informação na tela\n",
    "        #print(matricula)\n",
    "        #print(unidecode(str(nome)))\n",
    "\n",
    "        nome2 = unidecode(str(nome))\n",
    "    \n",
    "    \n",
    "    \n",
    "    def criar_usuario(matricula, nome2):\n",
    "        time.sleep(2)\n",
    "        #encontra campo usuario\n",
    "        pagi.moveTo(411, 244)\n",
    "        pagi.click()\n",
    "        pagi.write(matricula)\n",
    "        time.sleep(1)\n",
    "\n",
    "        #encontra campo filtrar\n",
    "        pagi.moveTo(418, 775)\n",
    "        pagi.click()\n",
    "        time.sleep(1)\n",
    "\n",
    "        #clica em adcionar novo usuario\n",
    "        pagi.moveTo(806, 561)\n",
    "        pagi.click()\n",
    "        time.sleep(1)\n",
    "\n",
    "        #encontra campo nome\n",
    "        pagi.moveTo(940, 305)\n",
    "        pagi.click()\n",
    "        pagi.write(nome)\n",
    "        time.sleep(1)\n",
    "\n",
    "        #rola scroll ate função para evolução/prescição\n",
    "        pagi.moveTo(1558, 339)\n",
    "        pagi.mouseDown(x=1558, y=480)\n",
    "        pagi.mouseUp()\n",
    "        time.sleep(1)\n",
    "\n",
    "        #rola scroll ate função para evolução/prescição\n",
    "        pagi.moveTo(1092, 586)\n",
    "        pagi.click()\n",
    "        pagi.write('tec')\n",
    "        time.sleep(1)\n",
    "        pagi.press('down')\n",
    "        pagi.press('enter')\n",
    "        time.sleep(1)\n",
    "\n",
    "        #encontra botão salvar\n",
    "        pagi.moveTo(1519, 775)\n",
    "        pagi.click() #clicar no botão salvar\n",
    "\n",
    "        #encontra botão de seleção\n",
    "        pagi.moveTo(102, 159)\n",
    "        time.sleep(1)\n",
    "        pagi.click()\n",
    "        pagi.moveTo(118, 240) #encontra o botão perfis\n",
    "        time.sleep(1)\n",
    "        pagi.click() #clica no botão perfis\n",
    "        time.sleep(1)\n",
    "\n",
    "        #encontra botão copia de perfil\n",
    "        pagi.moveTo(192, 199)\n",
    "        time.sleep(1)\n",
    "        pagi.click()\n",
    "        time.sleep(1)\n",
    "\n",
    "        #encontra botão usuario\n",
    "        pagi.moveTo(56, 289)\n",
    "        time.sleep(1)\n",
    "        pagi.click()\n",
    "        time.sleep(1)\n",
    "\n",
    "        #encontra botão usuario ref\n",
    "        pagi.moveTo(419, 302)\n",
    "        time.sleep(1)\n",
    "        pagi.click()\n",
    "        time.sleep(1)\n",
    "\n",
    "        #escreve a matricula do usuario referencia tecnico enfermagem\n",
    "        pagi.write('6323172')\n",
    "        time.sleep(1)\n",
    "\n",
    "        #marca perfil e setor\n",
    "        pagi.moveTo(350, 396) #setor\n",
    "        time.sleep(1)\n",
    "        pagi.click()\n",
    "        time.sleep(1)\n",
    "\n",
    "\n",
    "        pagi.moveTo(505, 399) #perfil\n",
    "        time.sleep(1)\n",
    "        pagi.click()\n",
    "        time.sleep(1)\n",
    "\n",
    "\n",
    "        #encontra Nome Completo\n",
    "        pagi.moveTo(953, 289) #setor\n",
    "        time.sleep(1)\n",
    "        pagi.click()\n",
    "        time.sleep(1)\n",
    "\n",
    "        #encontra Nome Completo\n",
    "        pagi.moveTo(953, 289) #setor\n",
    "        time.sleep(1)\n",
    "        pagi.click()\n",
    "        time.sleep(1)\n",
    "        pagi.write(nome)\n",
    "        time.sleep(1)\n",
    "\n",
    "\n",
    "        #encontra o botão copiar\n",
    "        pagi.moveTo(713, 357)\n",
    "        pagi.mouseDown(button='left', x=713, y=745)\n",
    "        pagi.mouseUp()\n",
    "        time.sleep(1)\n",
    "        pagi.moveTo(386, 758)\n",
    "        time.sleep(1)\n",
    "        pagi.click()\n",
    "\n",
    "        #clicar em ok no final\n",
    "        pagi.moveTo(x=938, y=552)\n",
    "        pagi.click()\n",
    "\n",
    "        pagi.alert(\"Acabou\")\n",
    "\n",
    "        #encontra botão de seleção\n",
    "        pagi.moveTo(102, 159)\n",
    "        time.sleep(1)\n",
    "        pagi.click()\n",
    "        pagi.moveTo(x=101, y=375)\n",
    "        pagi.click()\n",
    "\n",
    "cria_usuario_tasy()      "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "6db62a74",
   "metadata": {},
   "outputs": [
    {
     "ename": "Exception",
     "evalue": "File `'cria_usuario_tasy.py'` not found.",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mOSError\u001b[0m                                   Traceback (most recent call last)",
      "\u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\magics\\execution.py\u001b[0m in \u001b[0;36mrun\u001b[1;34m(self, parameter_s, runner, file_finder)\u001b[0m\n\u001b[0;32m    702\u001b[0m             \u001b[0mfpath\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0marg_lst\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 703\u001b[1;33m             \u001b[0mfilename\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfile_finder\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfpath\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    704\u001b[0m         \u001b[1;32mexcept\u001b[0m \u001b[0mIndexError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\utils\\path.py\u001b[0m in \u001b[0;36mget_py_filename\u001b[1;34m(name, force_win32)\u001b[0m\n\u001b[0;32m    108\u001b[0m     \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 109\u001b[1;33m         \u001b[1;32mraise\u001b[0m \u001b[0mIOError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'File `%r` not found.'\u001b[0m \u001b[1;33m%\u001b[0m \u001b[0mname\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    110\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mOSError\u001b[0m: File `'cria_usuario_tasy.py'` not found.",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[1;31mException\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_10912/771251405.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m    133\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    134\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 135\u001b[1;33m \u001b[0mget_ipython\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mrun_line_magic\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'run'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'cria_usuario_tasy.py'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    136\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    137\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\u001b[0m in \u001b[0;36mrun_line_magic\u001b[1;34m(self, magic_name, line, _stack_depth)\u001b[0m\n\u001b[0;32m   2349\u001b[0m                 \u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'local_ns'\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_local_scope\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mstack_depth\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2350\u001b[0m             \u001b[1;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mbuiltin_trap\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2351\u001b[1;33m                 \u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfn\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2352\u001b[0m             \u001b[1;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2353\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\decorator.py\u001b[0m in \u001b[0;36mfun\u001b[1;34m(*args, **kw)\u001b[0m\n\u001b[0;32m    230\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0mkwsyntax\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    231\u001b[0m                 \u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkw\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfix\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkw\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0msig\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 232\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mcaller\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m*\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mextras\u001b[0m \u001b[1;33m+\u001b[0m \u001b[0margs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    233\u001b[0m     \u001b[0mfun\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__name__\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    234\u001b[0m     \u001b[0mfun\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__doc__\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__doc__\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\magic.py\u001b[0m in \u001b[0;36m<lambda>\u001b[1;34m(f, *a, **k)\u001b[0m\n\u001b[0;32m    185\u001b[0m     \u001b[1;31m# but it's overkill for just that one bit of state.\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    186\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0mmagic_deco\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0marg\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 187\u001b[1;33m         \u001b[0mcall\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;32mlambda\u001b[0m \u001b[0mf\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m*\u001b[0m\u001b[0ma\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mk\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0ma\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mk\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    188\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    189\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mcallable\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0marg\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\magics\\execution.py\u001b[0m in \u001b[0;36mrun\u001b[1;34m(self, parameter_s, runner, file_finder)\u001b[0m\n\u001b[0;32m    712\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mos\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mname\u001b[0m \u001b[1;33m==\u001b[0m \u001b[1;34m'nt'\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mre\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mmatch\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34mr\"^'.*'$\"\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mfpath\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    713\u001b[0m                 \u001b[0mwarn\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'For Windows, use double quotes to wrap a filename: %run \"mypath\\\\myfile.py\"'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 714\u001b[1;33m             \u001b[1;32mraise\u001b[0m \u001b[0mException\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    715\u001b[0m         \u001b[1;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    716\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mfpath\u001b[0m \u001b[1;32min\u001b[0m \u001b[0msys\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mmeta_path\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mException\u001b[0m: File `'cria_usuario_tasy.py'` not found."
     ]
    }
   ],
   "source": [
    "#entrei na função\n",
    "\n",
    "\n",
    "\n",
    "def criar_usuario(matricula, nome):\n",
    "    time.sleep(2)\n",
    "    #encontra campo usuario\n",
    "    pagi.moveTo(411, 244)\n",
    "    pagi.click()\n",
    "    pagi.write(matricula)\n",
    "    time.sleep(1)\n",
    "\n",
    "    #encontra campo filtrar\n",
    "    pagi.moveTo(418, 775)\n",
    "    pagi.click()\n",
    "    time.sleep(1)\n",
    "\n",
    "    #clica em adcionar novo usuario\n",
    "    pagi.moveTo(806, 561)\n",
    "    pagi.click()\n",
    "    time.sleep(1)\n",
    "\n",
    "    #encontra campo nome\n",
    "    pagi.moveTo(940, 305)\n",
    "    pagi.click()\n",
    "    pagi.write(nome)\n",
    "    time.sleep(1)\n",
    "\n",
    "    #rola scroll ate função para evolução/prescição\n",
    "    pagi.moveTo(1558, 339)\n",
    "    pagi.mouseDown(x=1558, y=480)\n",
    "    pagi.mouseUp()\n",
    "    time.sleep(1)\n",
    "\n",
    "    #rola scroll ate função para evolução/prescição\n",
    "    pagi.moveTo(1092, 586)\n",
    "    pagi.click()\n",
    "    pagi.write('tec')\n",
    "    time.sleep(1)\n",
    "    pagi.press('down')\n",
    "    pagi.press('enter')\n",
    "    time.sleep(1)\n",
    "\n",
    "    #encontra botão salvar\n",
    "    pagi.moveTo(1519, 775)\n",
    "    pagi.click() #clicar no botão salvar\n",
    "\n",
    "    #encontra botão de seleção\n",
    "    pagi.moveTo(102, 159)\n",
    "    time.sleep(1)\n",
    "    pagi.click()\n",
    "    pagi.moveTo(118, 240) #encontra o botão perfis\n",
    "    time.sleep(1)\n",
    "    pagi.click() #clica no botão perfis\n",
    "    time.sleep(1)\n",
    "\n",
    "    #encontra botão copia de perfil\n",
    "    pagi.moveTo(192, 199)\n",
    "    time.sleep(1)\n",
    "    pagi.click()\n",
    "    time.sleep(1)\n",
    "\n",
    "    #encontra botão usuario\n",
    "    pagi.moveTo(56, 289)\n",
    "    time.sleep(1)\n",
    "    pagi.click()\n",
    "    time.sleep(1)\n",
    "\n",
    "    #encontra botão usuario ref\n",
    "    pagi.moveTo(419, 302)\n",
    "    time.sleep(1)\n",
    "    pagi.click()\n",
    "    time.sleep(1)\n",
    "\n",
    "    #escreve a matricula do usuario referencia tecnico enfermagem\n",
    "    pagi.write('6323172')\n",
    "    time.sleep(1)\n",
    "\n",
    "    #marca perfil e setor\n",
    "    pagi.moveTo(350, 396) #setor\n",
    "    time.sleep(1)\n",
    "    pagi.click()\n",
    "    time.sleep(1)\n",
    "\n",
    "\n",
    "    pagi.moveTo(505, 399) #perfil\n",
    "    time.sleep(1)\n",
    "    pagi.click()\n",
    "    time.sleep(1)\n",
    "\n",
    "\n",
    "    #encontra Nome Completo\n",
    "    pagi.moveTo(953, 289) #setor\n",
    "    time.sleep(1)\n",
    "    pagi.click()\n",
    "    time.sleep(1)\n",
    "\n",
    "    #encontra Nome Completo\n",
    "    pagi.moveTo(953, 289) #setor\n",
    "    time.sleep(1)\n",
    "    pagi.click()\n",
    "    time.sleep(1)\n",
    "    pagi.write(nome)\n",
    "    time.sleep(1)\n",
    "\n",
    "\n",
    "    #encontra o botão copiar\n",
    "    pagi.moveTo(713, 357)\n",
    "    pagi.mouseDown(button='left', x=713, y=745)\n",
    "    pagi.mouseUp()\n",
    "    time.sleep(1)\n",
    "    pagi.moveTo(386, 758)\n",
    "    time.sleep(1)\n",
    "    pagi.click()\n",
    "\n",
    "    #clicar em ok no final\n",
    "    pagi.moveTo(x=938, y=552)\n",
    "    pagi.click()\n",
    "\n",
    "    pagi.alert(\"Acabou\")\n",
    "\n",
    "    #encontra botão de seleção\n",
    "    pagi.moveTo(102, 159)\n",
    "    time.sleep(1)\n",
    "    pagi.click()\n",
    "    pagi.moveTo(x=101, y=375)\n",
    "    pagi.click()\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "#pagi.moveTo(504, 336)\n",
    "#pagi.mouseDown(button='left', x=504, y=459)\n",
    "#pagi.mouseUp()\n",
    "#pagi.moveTo(246, 535) #SPDM - Ambulatório - Enfermeiro_HTML\n",
    "#pagi.click(\n",
    "#pagi.hotkey('ctrlleft', 'F10')\n",
    "#pagi.moveTo(504, 459)\n",
    "#pagi.scroll(101, x=504, y=459) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "4dbca494",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Point(x=938, y=552)"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#posição do mouse\n",
    "pagi.position()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "be22ce0d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pyautogui as pagi\n",
    "import time\n",
    "\n",
    "#rola scroll ate função para evolução/prescição\n",
    "pagi.moveTo(1558, 339)\n",
    "pagi.mouseDown(button='left', x=1558, y=581)\n",
    "pagi.mouseUp()\n",
    "\n",
    "#rola scroll ate função para evolução/prescição\n",
    "pagi.moveTo(1092, 472)\n",
    "pagi.click()\n",
    "pagi.write('tec')\n",
    "time.sleep(1)\n",
    "pagi.press('down')\n",
    "pagi.press('enter')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "04ff155b",
   "metadata": {},
   "outputs": [],
   "source": [
    "pagi.press('down')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "c37e9302",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pyautogui as pagi\n",
    "import time\n",
    "\n",
    "#encontra o botão copiar\n",
    "pagi.moveTo(713, 357)\n",
    "pagi.mouseDown(button='left', x=713, y=745)\n",
    "pagi.mouseUp()\n",
    "time.sleep(1)\n",
    "pagi.moveTo(386, 758)\n",
    "time.sleep(1)\n",
    "#pagi.click()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "53dd5539",
   "metadata": {},
   "outputs": [],
   "source": [
    "#entrei na função\n",
    "\n",
    "\n",
    "time.sleep(2)\n",
    "#encontra campo usuario\n",
    "pagi.moveTo(411, 244)\n",
    "pagi.click()\n",
    "pagi.write('2558484564')\n",
    "time.sleep(1)\n",
    "\n",
    "#encontra campo filtrar\n",
    "pagi.moveTo(418, 775)\n",
    "pagi.click()\n",
    "time.sleep(1)\n",
    "\n",
    "#clica em adcionar novo usuario\n",
    "pagi.moveTo(806, 561)\n",
    "pagi.click()\n",
    "time.sleep(1)\n",
    "\n",
    "#encontra campo nome\n",
    "#encontra campo nome\n",
    "pagi.moveTo(940, 305)\n",
    "pagi.click()\n",
    "pagi.write('nome colaborador teste343')\n",
    "time.sleep(1)\n",
    "\n",
    "#rola scroll ate função para evolução/prescição\n",
    "pagi.moveTo(1558, 339)\n",
    "pagi.mouseDown(x=1558, y=480)\n",
    "pagi.mouseUp()\n",
    "time.sleep(1)\n",
    "\n",
    "pagi.moveTo(1092, 586)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "4afc5e7f",
   "metadata": {},
   "outputs": [],
   "source": [
    "pagi.scroll(-500)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "4a9534d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#rola scroll ate função para evolução/prescição\n",
    "pagi.moveTo(1558, 339)\n",
    "pagi.mouseDown(x=1558, y=480)\n",
    "pagi.mouseUp()\n",
    "time.sleep(1)\n",
    "\n",
    "pagi.moveTo(1171, 472)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "29c41838",
   "metadata": {},
   "outputs": [],
   "source": [
    "pagi.moveTo(1558, 339)\n",
    "pagi.mouseDown()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "c5a8ace2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#encontra botão de seleção\n",
    "pagi.moveTo(102, 159)\n",
    "time.sleep(1)\n",
    "pagi.click()\n",
    "pagi.moveTo(x=101, y=375)\n",
    "pagi.click()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "455c6a5c",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "#clicar em ok no final\n",
    "pagi.moveTo(x=938, y=552)\n",
    "pagi.click()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "99e641a9",
   "metadata": {},
   "outputs": [
    {
     "ename": "Exception",
     "evalue": "File `'cria_usuario_tasy.py'` not found.",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mOSError\u001b[0m                                   Traceback (most recent call last)",
      "\u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\magics\\execution.py\u001b[0m in \u001b[0;36mrun\u001b[1;34m(self, parameter_s, runner, file_finder)\u001b[0m\n\u001b[0;32m    702\u001b[0m             \u001b[0mfpath\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0marg_lst\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 703\u001b[1;33m             \u001b[0mfilename\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfile_finder\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfpath\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    704\u001b[0m         \u001b[1;32mexcept\u001b[0m \u001b[0mIndexError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\utils\\path.py\u001b[0m in \u001b[0;36mget_py_filename\u001b[1;34m(name, force_win32)\u001b[0m\n\u001b[0;32m    108\u001b[0m     \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 109\u001b[1;33m         \u001b[1;32mraise\u001b[0m \u001b[0mIOError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'File `%r` not found.'\u001b[0m \u001b[1;33m%\u001b[0m \u001b[0mname\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    110\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mOSError\u001b[0m: File `'cria_usuario_tasy.py'` not found.",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[1;31mException\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_10912/783597074.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mpyautogui\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0mpagi\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mtime\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 6\u001b[1;33m \u001b[0mget_ipython\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mrun_line_magic\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'run'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'cria_usuario_tasy.py'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\u001b[0m in \u001b[0;36mrun_line_magic\u001b[1;34m(self, magic_name, line, _stack_depth)\u001b[0m\n\u001b[0;32m   2349\u001b[0m                 \u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'local_ns'\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_local_scope\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mstack_depth\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2350\u001b[0m             \u001b[1;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mbuiltin_trap\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2351\u001b[1;33m                 \u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfn\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2352\u001b[0m             \u001b[1;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2353\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\decorator.py\u001b[0m in \u001b[0;36mfun\u001b[1;34m(*args, **kw)\u001b[0m\n\u001b[0;32m    230\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0mkwsyntax\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    231\u001b[0m                 \u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkw\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfix\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkw\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0msig\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 232\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mcaller\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m*\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mextras\u001b[0m \u001b[1;33m+\u001b[0m \u001b[0margs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    233\u001b[0m     \u001b[0mfun\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__name__\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    234\u001b[0m     \u001b[0mfun\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__doc__\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__doc__\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\magic.py\u001b[0m in \u001b[0;36m<lambda>\u001b[1;34m(f, *a, **k)\u001b[0m\n\u001b[0;32m    185\u001b[0m     \u001b[1;31m# but it's overkill for just that one bit of state.\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    186\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0mmagic_deco\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0marg\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 187\u001b[1;33m         \u001b[0mcall\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;32mlambda\u001b[0m \u001b[0mf\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m*\u001b[0m\u001b[0ma\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mk\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0ma\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mk\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    188\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    189\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mcallable\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0marg\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\magics\\execution.py\u001b[0m in \u001b[0;36mrun\u001b[1;34m(self, parameter_s, runner, file_finder)\u001b[0m\n\u001b[0;32m    712\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mos\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mname\u001b[0m \u001b[1;33m==\u001b[0m \u001b[1;34m'nt'\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mre\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mmatch\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34mr\"^'.*'$\"\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mfpath\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    713\u001b[0m                 \u001b[0mwarn\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'For Windows, use double quotes to wrap a filename: %run \"mypath\\\\myfile.py\"'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 714\u001b[1;33m             \u001b[1;32mraise\u001b[0m \u001b[0mException\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    715\u001b[0m         \u001b[1;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    716\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mfpath\u001b[0m \u001b[1;32min\u001b[0m \u001b[0msys\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mmeta_path\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mException\u001b[0m: File `'cria_usuario_tasy.py'` not found."
     ]
    }
   ],
   "source": [
    "from openpyxl import load_workbook\n",
    "import os\n",
    "from unidecode import unidecode\n",
    "import pyautogui as pagi\n",
    "import time\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5747ddfe",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
